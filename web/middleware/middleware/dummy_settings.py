"""
Django settings for middleware project.

Generated by 'django-admin startproject' using Django 1.11.14.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from datetime import timedelta
from boto3.session import Session
import logging

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

ALLOWED_HOSTS = ['*', ]


# Application definition
# APPS
# ------------------------------------------------------------------------------
THEME_APPS = [
]
DJANGO_APPS = [
    "django.contrib.admin",
    #"django.contrib.admin.apps.SimpleAdminConfig",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # 'django.contrib.humanize', # Handy template tags
]
THIRD_PARTY_APPS = [
    "rest_framework",
    "rest_framework_swagger",
    "django_celery_beat",
    "django_celery_monitor",
    "django_celery_results",
    "django_extensions",
    "bootstrap",
    "django_ses",
    "corsheaders",
]
LOCAL_APPS = [
    "ngip.apps.NgipConfig",
]
# https://docs.djangoproject.com/en/dev/ref/settings/#installed-apps
INSTALLED_APPS = THEME_APPS + DJANGO_APPS + THIRD_PARTY_APPS + LOCAL_APPS


MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "middleware.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ]
        },
    }
]

WSGI_APPLICATION = "middleware.wsgi.application"


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases


# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.sqlite3",
#         "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
#     }
# }

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator"
    },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator"},
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator"},
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator"},
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = "/static/"


# ngip customization
AUTH_USER_MODEL = "ngip.User"

# https://www.capside.com/labs/deploying-full-django-stack-with-docker-compose/
# using environment variable to pass in DB detail, making it easier to manage dev and prod
if 'DJANGO_DEBUG' in os.environ:
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = os.environ['DJANGO_DEBUG'].upper() == 'TRUE'

PRODUCTION = False
# local = local debug
ENVIRONMENT = 'local'
if 'ENVIRONMENT' in os.environ:
    PRODUCTION = os.environ['ENVIRONMENT'].lower() == 'prod'


if ENVIRONMENT == 'local':
    # SECURITY WARNING: don't run with debug turned on in production!
    DEBUG = True
    #STATICFILES_DIRS = ((os.path.join(BASE_DIR, 'static')),)
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    # STATIC_ROOT = '/static'
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.sqlite3',
    #         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    #     }
    # }
else:
    # Running the Docker image
    STATICFILES_DIRS = ((os.path.join(BASE_DIR, 'static')),)
    STATIC_ROOT = '/code/data/static'

